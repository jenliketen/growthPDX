scale_y_continuous(expand=c(0,0)) +
geom_hline(yintercept=c(20, averageDepth), linetype="dashed",
color=c("red", "green"), size=0.5)
p
p <- ggplot(data=data, aes(x=Model, y=Coverage, fill=Type, group=Sample)) +
geom_bar(position=position_dodge2(width=0.9, preserve = "single"), stat="identity", color="black", size=0.2) +
scale_fill_brewer(palette="Accent") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank()) +
scale_y_continuous(expand=c(0,0)) +
geom_hline(yintercept=c(20, averageDepth), linetype="dashed",
color=c("red", "forestgreen"), size=0.5)
p
p <- ggplot(data=data, aes(x=Model, y=Coverage, fill=Type, group=Sample)) +
geom_bar(position=position_dodge2(width=0.9, preserve = "single"), stat="identity", color="black", size=0.2) +
scale_fill_brewer(palette="Accent") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank()) +
scale_y_continuous(expand=c(0,0)) +
geom_hline(yintercept=c(20, averageDepth), linetype="dashed",
color=c("red", "forestgreen"), size=0.5)
p
coveragePlot <- ggplot(data=data, aes(x=Model, y=Coverage, fill=Type, group=Sample)) +
geom_bar(position=position_dodge2(width=0.9, preserve = "single"), stat="identity", color="black", size=0.2) +
scale_fill_brewer(palette="Accent") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank()) +
scale_y_continuous(expand=c(0,0)) +
geom_hline(yintercept=c(20, averageDepth), linetype="dashed",
color=c("red", "forestgreen"), size=0.5)
coveragePlot
coveragePlot <- ggplot(data=data, aes(x=Model, y=Coverage, fill=Type, group=Sample)) +
geom_bar(position=position_dodge2(width=0.9, preserve = "single"), stat="identity", color="black", size=0.2) +
scale_fill_brewer(palette="Pastel1") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank()) +
scale_y_continuous(expand=c(0,0)) +
geom_hline(yintercept=c(20, averageDepth), linetype="dashed",
color=c("red", "forestgreen"), size=0.5)
coveragePlot
coveragePlot <- ggplot(data=data, aes(x=Model, y=Coverage, fill=Type, group=Sample)) +
geom_bar(position=position_dodge2(width=0.9, preserve = "single"), stat="identity", color="black", size=0.2) +
scale_fill_brewer(palette="Pastel2") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank()) +
scale_y_continuous(expand=c(0,0)) +
geom_hline(yintercept=c(20, averageDepth), linetype="dashed",
color=c("red", "forestgreen"), size=0.5)
coveragePlot
coveragePlot <- ggplot(data=data, aes(x=Model, y=Coverage, fill=Type, group=Sample)) +
geom_bar(position=position_dodge2(width=0.9, preserve = "single"), stat="identity",
color="black", size=0.2,
binwidth=300) +
scale_fill_brewer(palette="Pastel2") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank()) +
scale_y_continuous(expand=c(0,0)) +
geom_hline(yintercept=c(20, averageDepth), linetype="dashed",
color=c("red", "forestgreen"), size=0.5)
coveragePlot <- ggplot(data=data, aes(x=Model, y=Coverage, fill=Type, group=Sample)) +
geom_bar(position=position_dodge2(width=0.9, preserve = "single"), stat="identity",
color="black", size=0.2) +
scale_fill_brewer(palette="Pastel2") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank()) +
scale_y_continuous(expand=c(0,0)) +
geom_hline(yintercept=c(20, averageDepth), linetype="dashed",
color=c("red", "forestgreen"), size=0.5)
coveragePlot
library(dplyr)
tumor <- filter(data, Type="Tumor") %>%
select(Model, Coverage)
tumor <- filter(data, Type=="Tumor") %>%
select(Model, Coverage)
View(tumor)
View(data)
normal <- filter(data, Type=="Normal") %>%
select(Coverage)
View(normal)
cbind(tumor, normal)
tumorPlot <- ggplot(data=tumor, aes(x=Model, y=Coverage)) +
geom_bar(stat="identity")
tumorPlot
tumor <- filter(data, Type=="Tumor") %>%
select(Sample, Model, Coverage)
tumorPlot <- ggplot(data=tumor, aes(x=Model, y=Coverage, group=Sample)) +
geom_bar(stat="identity")
tumorPlot
tumorPlot <- ggplot(data=tumor, aes(x=Model, y=Coverage, group=Model)) +
geom_bar(stat="identity")
tumorPlot
tumor <- filter(data, Type=="Tumor")
tumorPlot <- ggplot(data=tumor, aes(x=Model, y=Coverage, fill=Type, group=Sample)) +
geom_bar(stat="identity")
tumorPlot
tumorPlot <- ggplot(data=tumor, aes(x=Model, y=Coverage, fill=Type, group=Sample)) +
geom_bar(position=position_dodge2(width=0.9, preserve="single"), stat="identity")
tumorPlot
averageDepth.tumor <- mean(tumor$Coverage)
tumorPlot <- ggplot(data=tumor, aes(x=Model, y=Coverage, fill=Type, group=Sample)) +
geom_bar(position=position_dodge2(width=0.9, preserve="single"), stat="identity",
color="black", size=0.2) +
scale_fill_brewer(palette="Pastel2") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank()) +
scale_y_continuous(expand=c(0,0)) +
geom_hline(yintercept=c(20, averageDepth.tumor), linetype="dashed",
color=c("red", "forestgreen"), size=0.5)
tumorPlot
tumorPlot <- ggplot(data=tumor, aes(x=Model, y=Coverage, fill=Type, group=Sample)) +
geom_bar(position=position_dodge2(width=0.9, preserve="single"), stat="identity",
color="black", size=0.2) +
scale_fill_brewer(palette="Pastel1") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank()) +
scale_y_continuous(expand=c(0,0)) +
geom_hline(yintercept=c(20, averageDepth.tumor), linetype="dashed",
color=c("red", "forestgreen"), size=0.5)
tumorPlot
tumorPlot <- ggplot(data=tumor, aes(x=Model, y=Coverage, fill=Type, group=Sample)) +
geom_bar(position=position_dodge2(width=0.9, preserve="single"), stat="identity",
color="black", size=0.2,
show.legend=FALSE) +
scale_fill_brewer(palette="Pastel1") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank()) +
scale_y_continuous(expand=c(0,0)) +
geom_hline(yintercept=c(20, averageDepth.tumor), linetype="dashed",
color=c("red", "forestgreen"), size=0.5)
tumorPlot
tumorPlot <- ggplot(data=tumor, aes(x=Model, y=Coverage, fill=Type, group=Sample)) +
geom_bar(position="dodge", stat="identity",
color="black", size=0.2,
show.legend=FALSE) +
scale_fill_brewer(palette="Pastel1") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank()) +
scale_y_continuous(expand=c(0,0)) +
geom_hline(yintercept=c(20, averageDepth.tumor), linetype="dashed",
color=c("red", "forestgreen"), size=0.5)
tumorPlot
tumorPlot <- ggplot(data=tumor, aes(x=Model, y=Coverage, fill=Type, group=Sample)) +
geom_bar(position=position_dodge2(preserve="single"), stat="identity",
color="black", size=0.2,
show.legend=FALSE) +
scale_fill_brewer(palette="Pastel1") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank()) +
scale_y_continuous(expand=c(0,0)) +
geom_hline(yintercept=c(20, averageDepth.tumor), linetype="dashed",
color=c("red", "forestgreen"), size=0.5)
tumorPlot
tumorPlot <- ggplot(data=tumor, aes(x=Model, y=Coverage, fill=Type, group=Sample)) +
geom_bar(position=position_dodge2(width=1, preserve="single"), stat="identity",
color="black", size=0.2,
show.legend=FALSE) +
scale_fill_brewer(palette="Pastel1") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank()) +
scale_y_continuous(expand=c(0,0)) +
geom_hline(yintercept=c(20, averageDepth.tumor), linetype="dashed",
color=c("red", "forestgreen"), size=0.5)
tumorPlot
tumorPlot <- ggplot(data=tumor, aes(x=Model, y=Coverage, fill=Type, group=Sample)) +
geom_bar(position=position_dodge2(width=1), stat="identity",
color="black", size=0.2,
show.legend=FALSE) +
scale_fill_brewer(palette="Pastel1") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank()) +
scale_y_continuous(expand=c(0,0)) +
geom_hline(yintercept=c(20, averageDepth.tumor), linetype="dashed",
color=c("red", "forestgreen"), size=0.5)
tumorPlot
tumorPlot <- ggplot(data=tumor, aes(x=Model, y=Coverage, fill=Type, group=Sample)) +
geom_bar(position=position_dodge2(width=0.9, preserve="single"), stat="identity",
color="black", size=0.2,
show.legend=FALSE) +
scale_fill_brewer(palette="Pastel1") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank()) +
scale_y_continuous(expand=c(0,0)) +
geom_hline(yintercept=c(20, averageDepth.tumor), linetype="dashed",
color=c("red", "forestgreen"), size=0.5)
tumorPlot
PDX <- filter(data, Type=="PDX")
averageDepth.PDX <- mean(PDX$Coverage)
pdxPlot <- ggplot(data=PDX, aes(x=Model, y=Coverage, fill=Type, group=Sample)) +
geom_bar(position=position_dodge2(width=0.9, preserve="single"), stat="identity",
color="black", size=0.2,
show.legend=FALSE) +
scale_fill_brewer(palette="Pastel1") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank()) +
scale_y_continuous(expand=c(0,0)) +
geom_hline(yintercept=c(20, averageDepth.PDX), linetype="dashed",
color=c("red", "forestgreen"), size=0.5)
pdxPlot
PDC <- filter(data, Type=="PDC")
averageDepth.PDC <- mean(PDC$Coverage)
PDC <- filter(data, Type=="PDC")
averageDepth.PDC <- mean(PDC$Coverage)
pdcPlot <- ggplot(data=PDC, aes(x=Model, y=Coverage, fill=Type, group=Sample)) +
geom_bar(position=position_dodge2(width=0.9, preserve="single"), stat="identity",
color="black", size=0.2,
show.legend=FALSE) +
scale_fill_brewer(palette="Pastel1") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank()) +
scale_y_continuous(expand=c(0,0)) +
geom_hline(yintercept=c(20, averageDepth.PDc), linetype="dashed",
color=c("red", "forestgreen"), size=0.5)
pdcPlot
PDC <- filter(data, Type=="PDC")
averageDepth.PDC <- mean(PDC$Coverage)
pdcPlot <- ggplot(data=PDC, aes(x=Model, y=Coverage, fill=Type, group=Sample)) +
geom_bar(position=position_dodge2(width=0.9, preserve="single"), stat="identity",
color="black", size=0.2,
show.legend=FALSE) +
scale_fill_brewer(palette="Pastel1") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank()) +
scale_y_continuous(expand=c(0,0)) +
geom_hline(yintercept=c(20, averageDepth.PDC), linetype="dashed",
color=c("red", "forestgreen"), size=0.5)
pdcPlot
averageDepth <- mean(data$Coverage)
coveragePlot <- ggplot(data=data, aes(x=Model, y=Coverage, fill=Type, group=Sample)) +
geom_bar(position=position_dodge2(width=0.9, preserve = "single"), stat="identity",
color="black", size=0.2) +
scale_fill_brewer(palette="Pastel2") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank()) +
scale_y_continuous(expand=c(0,0)) +
geom_hline(yintercept=c(20, averageDepth), linetype="dashed",
color=c("red", "forestgreen"), size=0.5)
coveragePlot
pdcPlot <- ggplot(data=PDC, aes(x=Model, y=Coverage, fill=Type, group=Sample)) +
geom_bar(position=position_dodge2(width=0.9, preserve="single"), stat="identity",
color="black", size=0.2,
show.legend=FALSE) +
scale_fill_brewer(palette="Pastel1") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank()) +
scale_y_continuous(expand=c(0,0)) +
geom_hline(yintercept=c(20, averageDepth.PDC), linetype="dashed",
color=c("red", "forestgreen"), size=0.5) +
scale_x_reverse() +
coord_flip()
pdcPlot
pdcPlot <- ggplot(data=PDC, aes(x=Model, y=Coverage, fill=Type, group=Sample)) +
geom_bar(position=position_dodge2(width=0.9, preserve="single"), stat="identity",
color="black", size=0.2,
show.legend=FALSE) +
scale_fill_brewer(palette="Pastel1") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank()) +
scale_y_continuous(expand=c(0,0)) +
geom_hline(yintercept=c(20, averageDepth.PDC), linetype="dashed",
color=c("red", "forestgreen"), size=0.5) +
scale_y_reverse() +
coord_flip()
pdcPlot
pdcPlot <- ggplot(data=PDC, aes(x=Model, y=Coverage, fill=Type, group=Sample)) +
geom_bar(position=position_dodge2(width=0.9, preserve="single"), stat="identity",
color="black", size=0.2,
show.legend=FALSE) +
scale_fill_brewer(palette="Pastel1") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank()) +
scale_y_continuous(expand=c(0,0)) +
geom_hline(yintercept=c(20, averageDepth.PDC), linetype="dashed",
color=c("red", "forestgreen"), size=0.5) +
scale_y_reverse()
pdcPlot
rm(bam)
get_PDXE_Data <- function()
{
pdxun <- readRDS("~/Desktop/growth/data/pdxe_untreated.Rda")
dx <- data.frame(id = rownames(pData(pdxun)),
survival=pData(pdxun)$time.last_published,
doubleTime=pData(pdxun)$timeToDouble_published,
slope=pData(pdxun)$slope, stringsAsFactors = F)
dx$dtClass <-  ifelse(dx$doubleTime<median(dx$doubleTime), "Low", "High")
dx$slClass <- ifelse( dx$slope<median(dx$slope), "Low", "High")
dx$surClass <- ifelse(dx$survival<median(dx$survival), "Low", "High")
pData(pdxun)[, colnames(dx)] <- dx
return(pdxun)
}
pdxun
load("~/Desktop/growth/data/pdxe_untreated.Rda")
View(get_PDXE_Data)
pData(pdxun)
dx
function()
{
pdxun <- readRDS("~/Desktop/growth/data/pdxe_untreated.Rda")
dx <- data.frame(id = rownames(pData(pdxun)),
survival=pData(pdxun)$time.last_published,
doubleTime=pData(pdxun)$timeToDouble_published,
slope=pData(pdxun)$slope, stringsAsFactors = F)
dx$dtClass <-  ifelse(dx$doubleTime<median(dx$doubleTime), "Low", "High")
dx$slClass <- ifelse( dx$slope<median(dx$slope), "Low", "High")
dx$surClass <- ifelse(dx$survival<median(dx$survival), "Low", "High")
pData(pdxun)[, colnames(dx)] <- dx
return(pdxun)
}
pdxun
get_PDXE_Data()
pdxun <- readRDS("~/Desktop/growth/data/pdxe_untreated.Rda")
pData(pdxun)
rm(bam)
pdxun <- readRDS("~/Desktop/growth_arvind/data/pdxe_untreated.Rda")
corGrowthTissue <- function(feature, tissue, expMatrix=exprs(pdxun), eSet=pData(pdxun)) {
expTissue <- expMatrix[, pdxun@phenoData$tumor.type==tissue]
featureTissue <- eSet[pdxun@phenoData$tumor.type==tissue, ]
return(cor(x=t(expTissue), y=featureTissue[, feature], method="pearson"))
}
cor.growth.tissue <- NULL
for (tissue in unique(pdxun$tumor.type)) {
cor.survival.tissue <- corGrowthTissue("time.last_published", tissue)
cor.slope.tissue <- corGrowthTissue("slope", tissue)
cor.doubleTime.tissue <- corGrowthTissue("timeToDouble_published", tissue)
cor.growth.tissue <- cbind(cor.growth.tissue, cor.survival.tissue, cor.slope.tissue, cor.doubleTime.tissue)
}
test <- as.data.frame(cor.growth.tissue)
View(test)
View(cor.doubleTime.tissue)
View(cor.growth.tissue)
dimnames(cor.growth.tissue) <- c(c(), paste("survival", unique(pdxun$tumor.type.name)))
dimnames(cor.growth.tissue) <- list(c(), paste("survival", unique(pdxun$tumor.type.name)))
for (name in unique(pdxun$tumor.type.name)) {
apply(colnames(test), MARGIN=2, 3, function() paste("Survival.", name, sep=""))
}
for (name in unique(pdxun$tumor.type.name)) {
apply(colnames(test), 3, MARGIN=2, function() paste("Survival.", name, sep=""))
}
for (name in unique(pdxun$tumor.type.name)) {
apply(colnames(test), MARGIN=2, function() paste("Survival.", name, sep=""))
}
for (name in unique(pdxun$tumor.type.name)) {
apply(colnames(test), function() paste("Survival.", name, sep=""))
}
for (name in unique(pdxun$tumor.type.name)) {
apply(colnames(test), paste("Survival.", name, sep=""))
}
for (name in unique(pdxun$tumor.type.name)) {
apply(colnames(test), FUN=paste("Survival.", name, sep=""))
}
for (name in unique(pdxun$tumor.type)) {
for (parameter in c("Survival", "Slope", "Doubling Time")) {
paste(parameter, name, sep=".")
}
}
for (name in unique(pdxun$tumor.type)) {
for (parameter in c("Survival", "Slope", "Doubling Time")) {
x <- paste(parameter, name, sep=".")
}
}
x
nn <- c()
for (name in unique(pdxun$tumor.type)) {
for (parameter in c("Survival", "Slope", "Doubling Time")) {
x <- paste(parameter, name, sep=".")
nn <- (nn, x)
}
}
nn <- c()
for (name in unique(pdxun$tumor.type)) {
for (parameter in c("Survival", "Slope", "Doubling Time")) {
x <- paste(parameter, name, sep=".")
nn <- c(nn, x)
}
}
nn
colnames(test) <- nn
rm(list=ls())
setwd("~/Desktop/growth")
pdxun <- readRDS("~/Desktop/growth_arvind/data/pdxe_untreated.Rda")
corGrowth <- function(feature, expMatrix=exprs(pdxun), eSet=pData(pdxun)) {
return(cor(x=t(expMatrix), y=eSet[, feature], method="pearson"))
}
cor.survival <- corGrowth("time.last_published")
cor.slope <- corGrowth("slope")
cor.doubleTime <- corGrowth("timeToDouble_published")
cor.growth <- data.frame(cor.survival, cor.slope, cor.doubleTime)
colnames(cor.growth) <- c("Survival", "Slope", "Doubling Time")
View(cor.growth)
corGrowthTissue <- function(feature, tissue, expMatrix=exprs(pdxun), eSet=pData(pdxun)) {
expTissue <- expMatrix[, pdxun@phenoData$tumor.type==tissue]
featureTissue <- eSet[pdxun@phenoData$tumor.type==tissue, ]
return(cor(x=t(expTissue), y=featureTissue[, feature], method="pearson"))
}
tmpMatrix <- NULL
for (tissue in unique(pdxun$tumor.type)) {
cor.survival.tissue <- corGrowthTissue("time.last_published", tissue)
cor.slope.tissue <- corGrowthTissue("slope", tissue)
cor.doubleTime.tissue <- corGrowthTissue("timeToDouble_published", tissue)
tmpMatrix <- cbind(tmpMatrix, cor.survival.tissue, cor.slope.tissue, cor.doubleTime.tissue)
}
cor.growth.tissue <- as.data.frame(tmpMatrix)
growthTissueNames <- c()
for (name in unique(pdxun$tumor.type)) {
for (parameter in c("Survival", "Slope", "Doubling Time")) {
x <- paste(parameter, name, sep=".")
growthTissueNames <- c(growthTissueNames, x)
}
}
View(cor.growth.tissue)
colnames(cor.growth.tissue) <- growthTissueNames
rm(list=ls())
pdxun <- readRDS("~/Desktop/growth_arvind/data/pdxe_untreated.Rda")
corGrowthTissue <- function(feature, tissue, expMatrix=exprs(pdxun), eSet=pData(pdxun)) {
expTissue <- expMatrix[, pdxun@phenoData$tumor.type==tissue]
featureTissue <- eSet[pdxun@phenoData$tumor.type==tissue, ]
return(cor(x=t(expTissue), y=featureTissue[, feature], method="pearson"))
}
tmpMatrix <- NULL
for (tissue in unique(pdxun$tumor.type)) {
cor.survival.tissue <- corGrowthTissue("time.last_published", tissue)
cor.slope.tissue <- corGrowthTissue("slope", tissue)
cor.doubleTime.tissue <- corGrowthTissue("timeToDouble_published", tissue)
tmpMatrix <- cbind(tmpMatrix, cor.survival.tissue, cor.slope.tissue, cor.doubleTime.tissue)
}
cor.growth.tissue <- as.data.frame(tmpMatrix)
growthTissueNames <- c()
for (name in unique(pdxun$tumor.type)) {
for (parameter in c("Survival", "Slope", "Doubling Time")) {
x <- paste(parameter, name, sep=".")
growthTissueNames <- c(growthTissueNames, x)
}
}
colnames(cor.growth.tissue) <- growthTissueNames
View(cor.growth.tissue)
View(cor.growth.tissue)
growthTissueNames <- c()
for (name in unique(pdxun$tumor.type)) {
for (parameter in c("Survival", "Slope", "DoublingTime")) {
x <- paste(parameter, name, sep=".")
growthTissueNames <- c(growthTissueNames, x)
}
}
colnames(cor.growth.tissue) <- growthTissueNames
View(cor.growth.tissue)
rm(list=ls())
pdxun <- readRDS("~/Desktop/growth_arvind/data/pdxe_untreated.Rda")
